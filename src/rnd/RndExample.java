package rnd;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;

import widgets.ChooseRandom;

/**
 * This type was generated by a SmartGuide.
 */
public class RndExample extends JFrame {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private JFileChooser ivjJFileChooser1 = null;

	IvjEventHandler ivjEventHandler = new IvjEventHandler();

	private JPanel ivjJPanel1 = null;

	private ChooseRandom ivjChooseRandom1 = null;

	private JButton ivjJButtonNext = null;

	private JLabel ivjJLabelChooseRandom = null;

	private JTextField ivjJTextField1 = null;

	private JButton ivjJButtonProbability = null;

	private JLabel ivjJLabel2 = null;

	private JLabel ivjJLabel21 = null;

	private JLabel ivjJLabel22 = null;

	private JTextField ivjJTextField2 = null;

	private JTextField ivjJTextField21 = null;

	private JTextField ivjJTextField22 = null;

	private JButton ivjJButtonCreateFile = null;

	private JButton ivjJButtonShowFile = null;

	private JLabel ivjJLabelFileName = null;

	class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == RndExample.this.getJButtonNext())
				connEtoM3(e);
			if (e.getSource() == RndExample.this.getJButtonProbability())
				connEtoM1(e);
			if (e.getSource() == RndExample.this.getJButtonCreateFile())
				connEtoM5(e);
			if (e.getSource() == RndExample.this.getJButtonShowFile())
				connEtoM6(e);
		};
	};

	/**
	 * RndExample constructor comment.
	 */
	public RndExample() {
		super();
		initialize();
	}

	/**
	 * RndExample constructor comment.
	 * 
	 * @param title
	 *            java.lang.String
	 */
	public RndExample(String title) {
		super(title);
	}

	/**
	 * Comment
	 */
	public void actionCreateFile(int result) {
		if (result == 0) {
			String fileName = this.getJFileChooser1().getSelectedFile()
					.getPath();
			this.getJLabelFileName().setText("Создан файл " + fileName);
			try {
				java.io.FileWriter file = new java.io.FileWriter(fileName,
						false);
				file.close();
				file = new java.io.FileWriter(fileName, true);
				for (int i = 0; i < 100; i++) {
					file.write(getChooseRandom1().next() + "\n");
				}
				file.close();
			} catch (java.io.IOException e) {
				this.getJLabelFileName().setText("Ошибка ввода-вывода");
			}
		} else {
			this.getJLabelFileName().setText("Файл не выбран");
		}

	}

	/**
	 * Comment
	 */
	public void actionShowFile(int result) {
		if (result == 0) {
			String fileName = this.getJFileChooser1().getSelectedFile()
					.getPath();
			java.io.FileInputStream fs = null;
			java.io.InputStreamReader isr = null;
			java.io.BufferedReader br = null;
			try {
				fs = new java.io.FileInputStream(fileName);
			} catch (java.io.FileNotFoundException e) {
				e.printStackTrace(System.out);
				return;
			}
			try {
				isr = new java.io.InputStreamReader(fs);
				br = new java.io.BufferedReader(isr);
				String str = null;
				while ((str = br.readLine()) != null) {
					System.out.println(Double.parseDouble(str));
				}
			} catch (java.io.IOException e) {
				e.printStackTrace(System.out);
			}
		}
		return;
	}

	/**
	 * connEtoC1: (
	 * (JButtonCreateFile,action.actionPerformed(java.awt.event.ActionEvent) -->
	 * JFileChooser1,showOpenDialog(Ljava.awt.Component;)I).normalResult -->
	 * RndExample.connEtoM1_NormalResult(I)V)
	 * 
	 * @param result
	 *            int
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void connEtoC1(int result) {
		try {
			// user code begin {1}
			// user code end
			this.actionCreateFile(result);
			// user code begin {2}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {3}
			// user code end
			handleException(ivjExc);
		}
	}

	/**
	 * connEtoC2: (
	 * (JButtonShowFile,action.actionPerformed(java.awt.event.ActionEvent) -->
	 * JFileChooser1,showOpenDialog(Ljava.awt.Component;)I).normalResult -->
	 * RndExample.actionShowFile(I)V)
	 * 
	 * @param result
	 *            int
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void connEtoC2(int result) {
		try {
			// user code begin {1}
			// user code end
			this.actionShowFile(result);
			// user code begin {2}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {3}
			// user code end
			handleException(ivjExc);
		}
	}

	/**
	 * connEtoM1:
	 * (JButtonProbability.action.actionPerformed(java.awt.event.ActionEvent)
	 * --> ChooseRandom1.probability(DD)D)
	 * 
	 * @return double
	 * @param arg1
	 *            java.awt.event.ActionEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private double connEtoM1(java.awt.event.ActionEvent arg1) {
		double connEtoM1Result = 0;
		try {
			// user code begin {1}
			// user code end
			connEtoM1Result = getChooseRandom1().probability(
					new Double(getJTextField2().getText()).doubleValue(),
					new Double(getJTextField21().getText()).doubleValue());
			connEtoM2(connEtoM1Result);
			// user code begin {2}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {3}
			// user code end
			handleException(ivjExc);
		}
		return connEtoM1Result;
	}

	/**
	 * connEtoM2: (
	 * (JButtonProbability,action.actionPerformed(java.awt.event.ActionEvent)
	 * --> ChooseRandom1,probability(DD)D).normalResult --> JTextField22.text)
	 * 
	 * @param result
	 *            double
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void connEtoM2(double result) {
		try {
			// user code begin {1}
			// user code end
			getJTextField22().setText(String.valueOf(result));
			// user code begin {2}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {3}
			// user code end
			handleException(ivjExc);
		}
	}

	/**
	 * connEtoM3:
	 * (JButtonNext.action.actionPerformed(java.awt.event.ActionEvent) -->
	 * ChooseRandom1.next()D)
	 * 
	 * @return double
	 * @param arg1
	 *            java.awt.event.ActionEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private double connEtoM3(java.awt.event.ActionEvent arg1) {
		double connEtoM3Result = 0;
		try {
			// user code begin {1}
			// user code end
			connEtoM3Result = getChooseRandom1().next();
			connEtoM4(connEtoM3Result);
			// user code begin {2}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {3}
			// user code end
			handleException(ivjExc);
		}
		return connEtoM3Result;
	}

	/**
	 * connEtoM4: (
	 * (JButtonNext,action.actionPerformed(java.awt.event.ActionEvent) -->
	 * ChooseRandom1,next()D).normalResult --> JTextField1.text)
	 * 
	 * @param result
	 *            double
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void connEtoM4(double result) {
		try {
			// user code begin {1}
			// user code end
			getJTextField1().setText(String.valueOf(result));
			// user code begin {2}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {3}
			// user code end
			handleException(ivjExc);
		}
	}

	/**
	 * connEtoM5:
	 * (JButtonCreateFile.action.actionPerformed(java.awt.event.ActionEvent) -->
	 * JFileChooser1.showOpenDialog(Ljava.awt.Component;)I)
	 * 
	 * @return int
	 * @param arg1
	 *            java.awt.event.ActionEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private int connEtoM5(java.awt.event.ActionEvent arg1) {
		int connEtoM5Result = 0;
		try {
			// user code begin {1}
			// user code end
			connEtoM5Result = getJFileChooser1().showOpenDialog(this);
			connEtoC1(connEtoM5Result);
			// user code begin {2}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {3}
			// user code end
			handleException(ivjExc);
		}
		return connEtoM5Result;
	}

	/**
	 * connEtoM6:
	 * (JButtonShowFile.action.actionPerformed(java.awt.event.ActionEvent) -->
	 * JFileChooser1.showOpenDialog(Ljava.awt.Component;)I)
	 * 
	 * @return int
	 * @param arg1
	 *            java.awt.event.ActionEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private int connEtoM6(java.awt.event.ActionEvent arg1) {
		int connEtoM6Result = 0;
		try {
			// user code begin {1}
			// user code end
			connEtoM6Result = getJFileChooser1().showOpenDialog(this);
			connEtoC2(connEtoM6Result);
			// user code begin {2}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {3}
			// user code end
			handleException(ivjExc);
		}
		return connEtoM6Result;
	}

	/**
	 * Return the ChooseRandom1 property value.
	 * 
	 * @return rnd.ChooseRandom
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private ChooseRandom getChooseRandom1() {
		if (ivjChooseRandom1 == null) {
			try {
				ivjChooseRandom1 = new widgets.ChooseRandom();
				ivjChooseRandom1.setName("ChooseRandom1");
				ivjChooseRandom1.setBounds(42, 40, 212, 23);
				ivjChooseRandom1.setRandom(new rnd.Erlang(1, 2));
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjChooseRandom1;
	}

	/**
	 * Return the JButton1 property value.
	 * 
	 * @return javax.swing.JButton
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JButton getJButtonCreateFile() {
		if (ivjJButtonCreateFile == null) {
			try {
				ivjJButtonCreateFile = new javax.swing.JButton();
				ivjJButtonCreateFile.setName("JButtonCreateFile");
				ivjJButtonCreateFile.setText("Создать файл случайных чисел");
				ivjJButtonCreateFile.setBounds(19, 264, 259, 25);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJButtonCreateFile;
	}

	/**
	 * Return the JButtonNext property value.
	 * 
	 * @return javax.swing.JButton
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JButton getJButtonNext() {
		if (ivjJButtonNext == null) {
			try {
				ivjJButtonNext = new javax.swing.JButton();
				ivjJButtonNext.setName("JButtonNext");
				ivjJButtonNext.setText("Очередное случайное число");
				ivjJButtonNext.setBounds(44, 81, 208, 24);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJButtonNext;
	}

	/**
	 * Return the JButtonProbability property value.
	 * 
	 * @return javax.swing.JButton
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JButton getJButtonProbability() {
		if (ivjJButtonProbability == null) {
			try {
				ivjJButtonProbability = new javax.swing.JButton();
				ivjJButtonProbability.setName("JButtonProbability");
				ivjJButtonProbability
						.setText("Вероятность попадания в интервал");
				ivjJButtonProbability.setBounds(26, 155, 245, 25);
				ivjJButtonProbability
						.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJButtonProbability;
	}

	/**
	 * Return the JButton2 property value.
	 * 
	 * @return javax.swing.JButton
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JButton getJButtonShowFile() {
		if (ivjJButtonShowFile == null) {
			try {
				ivjJButtonShowFile = new javax.swing.JButton();
				ivjJButtonShowFile.setName("JButtonShowFile");
				ivjJButtonShowFile.setText("Вывести файл на консоль");
				ivjJButtonShowFile.setBounds(21, 322, 258, 25);
				ivjJButtonShowFile.setActionCommand("JButtonShowFile");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJButtonShowFile;
	}

	/**
	 * Return the JFileChooser1 property value.
	 * 
	 * @return javax.swing.JFileChooser
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JFileChooser getJFileChooser1() {
		if (ivjJFileChooser1 == null) {
			try {
				ivjJFileChooser1 = new javax.swing.JFileChooser();
				ivjJFileChooser1.setName("JFileChooser1");
				ivjJFileChooser1.setBounds(428, 266, 220, 167);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJFileChooser1;
	}

	/**
	 * Return the JLabel2 property value.
	 * 
	 * @return javax.swing.JLabel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JLabel getJLabel2() {
		if (ivjJLabel2 == null) {
			try {
				ivjJLabel2 = new javax.swing.JLabel();
				ivjJLabel2.setName("JLabel2");
				ivjJLabel2.setText("от");
				ivjJLabel2.setBounds(68, 195, 15, 14);
				ivjJLabel2
						.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
				ivjJLabel2
						.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJLabel2;
	}

	/**
	 * Return the JLabel21 property value.
	 * 
	 * @return javax.swing.JLabel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JLabel getJLabel21() {
		if (ivjJLabel21 == null) {
			try {
				ivjJLabel21 = new javax.swing.JLabel();
				ivjJLabel21.setName("JLabel21");
				ivjJLabel21.setText("до");
				ivjJLabel21.setBounds(151, 195, 20, 14);
				ivjJLabel21
						.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
				ivjJLabel21
						.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJLabel21;
	}

	/**
	 * Return the JLabel22 property value.
	 * 
	 * @return javax.swing.JLabel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JLabel getJLabel22() {
		if (ivjJLabel22 == null) {
			try {
				ivjJLabel22 = new javax.swing.JLabel();
				ivjJLabel22.setName("JLabel22");
				ivjJLabel22.setText("равна");
				ivjJLabel22.setBounds(39, 224, 39, 14);
				ivjJLabel22
						.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
				ivjJLabel22
						.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJLabel22;
	}

	/**
	 * Return the JLabelChooseRandom property value.
	 * 
	 * @return javax.swing.JLabel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JLabel getJLabelChooseRandom() {
		if (ivjJLabelChooseRandom == null) {
			try {
				ivjJLabelChooseRandom = new javax.swing.JLabel();
				ivjJLabelChooseRandom.setName("JLabelChooseRandom");
				ivjJLabelChooseRandom.setText("Выбранное распределение");
				ivjJLabelChooseRandom.setBounds(62, 19, 167, 14);
				ivjJLabelChooseRandom
						.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
				ivjJLabelChooseRandom
						.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJLabelChooseRandom;
	}

	/**
	 * Return the JLabelFileName property value.
	 * 
	 * @return javax.swing.JLabel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JLabel getJLabelFileName() {
		if (ivjJLabelFileName == null) {
			try {
				ivjJLabelFileName = new javax.swing.JLabel();
				ivjJLabelFileName.setName("JLabelFileName");
				ivjJLabelFileName.setText("");
				ivjJLabelFileName.setBounds(19, 299, 258, 14);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJLabelFileName;
	}

	/**
	 * Return the JPanel1 property value.
	 * 
	 * @return javax.swing.JPanel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JPanel getJPanel1() {
		if (ivjJPanel1 == null) {
			try {
				ivjJPanel1 = new javax.swing.JPanel();
				ivjJPanel1.setName("JPanel1");
				ivjJPanel1.setLayout(null);
				getJPanel1().add(getJButtonCreateFile(),
						getJButtonCreateFile().getName());
				getJPanel1().add(getJButtonShowFile(),
						getJButtonShowFile().getName());
				getJPanel1().add(getJLabelChooseRandom(),
						getJLabelChooseRandom().getName());
				getJPanel1().add(getChooseRandom1(),
						getChooseRandom1().getName());
				getJPanel1().add(getJButtonNext(), getJButtonNext().getName());
				getJPanel1().add(getJTextField1(), getJTextField1().getName());
				getJPanel1().add(getJButtonProbability(),
						getJButtonProbability().getName());
				getJPanel1().add(getJTextField2(), getJTextField2().getName());
				getJPanel1().add(getJLabel2(), getJLabel2().getName());
				getJPanel1().add(getJLabel21(), getJLabel21().getName());
				getJPanel1()
						.add(getJTextField21(), getJTextField21().getName());
				getJPanel1().add(getJLabel22(), getJLabel22().getName());
				getJPanel1()
						.add(getJTextField22(), getJTextField22().getName());
				getJPanel1().add(getJLabelFileName(),
						getJLabelFileName().getName());
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJPanel1;
	}

	/**
	 * Return the JTextField1 property value.
	 * 
	 * @return javax.swing.JTextField
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JTextField getJTextField1() {
		if (ivjJTextField1 == null) {
			try {
				ivjJTextField1 = new javax.swing.JTextField();
				ivjJTextField1.setName("JTextField1");
				ivjJTextField1
						.setComponentOrientation(java.awt.ComponentOrientation.UNKNOWN);
				ivjJTextField1.setBounds(73, 118, 151, 18);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJTextField1;
	}

	/**
	 * Return the JTextField2 property value.
	 * 
	 * @return javax.swing.JTextField
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JTextField getJTextField2() {
		if (ivjJTextField2 == null) {
			try {
				ivjJTextField2 = new javax.swing.JTextField();
				ivjJTextField2.setName("JTextField2");
				ivjJTextField2.setBounds(86, 193, 54, 18);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJTextField2;
	}

	/**
	 * Return the JTextField21 property value.
	 * 
	 * @return javax.swing.JTextField
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JTextField getJTextField21() {
		if (ivjJTextField21 == null) {
			try {
				ivjJTextField21 = new javax.swing.JTextField();
				ivjJTextField21.setName("JTextField21");
				ivjJTextField21.setBounds(174, 193, 54, 18);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJTextField21;
	}

	/**
	 * Return the JTextField22 property value.
	 * 
	 * @return javax.swing.JTextField
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JTextField getJTextField22() {
		if (ivjJTextField22 == null) {
			try {
				ivjJTextField22 = new javax.swing.JTextField();
				ivjJTextField22.setName("JTextField22");
				ivjJTextField22
						.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
				ivjJTextField22.setBounds(83, 222, 146, 18);
				ivjJTextField22
						.setHorizontalAlignment(javax.swing.JTextField.LEFT);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJTextField22;
	}

	/**
	 * Called whenever the part throws an exception.
	 * 
	 * @param exception
	 *            java.lang.Throwable
	 */
	private void handleException(java.lang.Throwable exception) {

		/* Uncomment the following lines to print uncaught exceptions to stdout */
		// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
		// exception.printStackTrace(System.out);
	}

	/**
	 * Initializes connections
	 * 
	 * @exception java.lang.Exception
	 *                The exception description.
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void initConnections() throws java.lang.Exception {
		// user code begin {1}
		// user code end
		getJButtonNext().addActionListener(ivjEventHandler);
		getJButtonProbability().addActionListener(ivjEventHandler);
		getJButtonCreateFile().addActionListener(ivjEventHandler);
		getJButtonShowFile().addActionListener(ivjEventHandler);
	}

	/**
	 * Initialize the class.
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void initialize() {
		try {
			// user code begin {1}
			// user code end
			setName("RndExample");
			setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
			setSize(299, 408);
			setTitle("RndExample");
			setContentPane(getJPanel1());
			initConnections();
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
		// user code begin {2}
		// user code end
	}


	/**
	 * Starts the application.
	 * 
	 * @param args
	 *            an array of command-line arguments
	 */
	public static void main(java.lang.String[] args) {
		try {
			/* Set native look and feel */
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
			/* Create the frame */
			RndExample aRndExample = new RndExample();
			/* Add a windowListener for the windowClosedEvent */
			aRndExample.addWindowListener(new java.awt.event.WindowAdapter() {
				public void windowClosed(java.awt.event.WindowEvent e) {
					System.exit(0);
				};
			});
			aRndExample.setVisible(true);
		} catch (Throwable exception) {
			System.err.println("Exception occurred in main() of RndExample");
			exception.printStackTrace(System.out);
		}
	}
}
